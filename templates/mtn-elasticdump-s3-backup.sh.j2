#!/bin/bash
# Daily backup of elasticsearch indices

set -x

elasticdump \
    --input http://{{ elasticsearch_host }}:9200/.kibana \
    --limit 1000 \
    --output .kibana.json

{# nerf the backup step in vagrant #}
{% if vagrant_test_env is defined and vagrant_test_env %}# {% endif -%}
aws s3 cp .kibana.json s3://{{ kibana_elasticdump_bucket }}/{{ inventory_hostname }}/

YESTERDAY=logstash-`date -u --date='yesterday' +"%Y.%m.%d"`
elasticdump \
    --input http://{{ elasticsearch_host }}:9200/$YESTERDAY \
    --limit 10000 \
    --output $YESTERDAY.json

gzip $YESTERDAY.json

{# nerf the backup step in vagrant #}
{% if vagrant_test_env is defined and vagrant_test_env %}# {% endif -%}
aws s3 cp $YESTERDAY.json.gz s3://{{ kibana_elasticdump_bucket }}/{{ inventory_hostname }}/ \
{% if vagrant_test_env is defined and vagrant_test_env %}# {% endif -%}
    && rm $YESTERDAY.json.gz

# Remove elasticsearch daily backups after 1 week
LASTWEEK=logstash-`date -u --date='last week' +"%Y.%m.%d"`.gz
aws s3 rm s3://{{ kibana_elasticdump_bucket }}/{{ inventory_hostname }}/$LASTWEEK \
    || echo "$LASTWEEK not found on s3"
